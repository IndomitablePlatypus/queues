{
    "openapi": "3.0.2",
    "info": {
        "title": "Cardz Lite"
    },
    "servers": [
        {
            "url": "http:\/\/localhost\/api\/v1",
            "description": "App Environment"
        },
        {
            "url": "http:\/\/localhost\/api\/v1",
            "description": "Default"
        }
    ],
    "paths": {
        "\/customer\/register": {
            "post": {
                "tags": [
                    "customer"
                ],
                "summary": "Register user",
                "description": "Registers new user with email OR phone, password, device name (for token). Returns new auth token.",
                "operationId": "RegisterCustomer",
                "requestBody": {
                    "description": "Register new customer",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Access token",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "description": "API Access Bearer Token",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "9|eigK2WNOHtJEOKtgcXD6m2NIaDFVcIMDfCMrsKii"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/UserAlreadyRegisteredException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationError"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/customer\/get-token": {
            "post": {
                "tags": [
                    "customer"
                ],
                "summary": "Get user token",
                "description": "Returns new API user token (for basic bearer auth). Requires identity, password and device name.",
                "operationId": "GetCustomerToken",
                "requestBody": {
                    "description": "Get customer API access token for the specific device. <br>\n                          With each request new token is generated. Old ones are invalidated shortly after. <br>\n                          *Tokens on other customer devices remain unaffected.\n            ",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/GetTokenRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Access token",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "description": "API Access Bearer Token",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "9|eigK2WNOHtJEOKtgcXD6m2NIaDFVcIMDfCMrsKii"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationError"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/customer\/workspaces": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Register user",
                "description": "Registers new user with email OR phone, password, device name (for token). Returns new auth token.",
                "operationId": "RegisterCustomer",
                "requestBody": {
                    "description": "Register new customer",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Access token",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "description": "API Access Bearer Token",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "9|eigK2WNOHtJEOKtgcXD6m2NIaDFVcIMDfCMrsKii"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/UserAlreadyRegisteredException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationError"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/customer\/wipe-tokens": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Clear user tokens",
                "description": "Removes all existing access tokens for the current user. (I.e. logout)",
                "operationId": "GetCustomerToken",
                "responses": {
                    "200": {
                        "description": "All tokens successfully cleared",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "description": "Ok",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Ok"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/customer\/card": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Register user",
                "description": "Registers new user with email OR phone, password, device name (for token). Returns new auth token.",
                "operationId": "RegisterCustomer",
                "requestBody": {
                    "description": "Register new customer",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Access token",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "description": "API Access Bearer Token",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "9|eigK2WNOHtJEOKtgcXD6m2NIaDFVcIMDfCMrsKii"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/UserAlreadyRegisteredException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationError"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/customer\/card\/{cardId}": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Register user",
                "description": "Registers new user with email OR phone, password, device name (for token). Returns new auth token.",
                "operationId": "RegisterCustomer",
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Register new customer",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Access token",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "description": "API Access Bearer Token",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "9|eigK2WNOHtJEOKtgcXD6m2NIaDFVcIMDfCMrsKii"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/UserAlreadyRegisteredException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationError"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/card\/{cardId}": {
            "get": {
                "tags": [
                    "business",
                    "card"
                ],
                "summary": "Get card",
                "description": "Returns card by card id if it is issued in the current workspace.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "GetCard",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "Card GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business card",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessCard"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/card": {
            "post": {
                "tags": [
                    "business",
                    "card"
                ],
                "summary": "Issue card",
                "description": "Issues card for a plan to a customer.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "IssueCard",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Issue card request",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/NewCard"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Business card",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessCard"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationError"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/card\/{cardId}\/complete": {
            "put": {
                "tags": [
                    "business",
                    "card"
                ],
                "summary": "Complete card",
                "description": "Marks card as completed, meaning the owner has received their bonus.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "CompleteCard",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "Card GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business card",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessCard"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/card\/{cardId}\/revoke": {
            "put": {
                "tags": [
                    "business",
                    "card"
                ],
                "summary": "Revoke card",
                "description": "Marks card as revoked, meaning the owner cannot use and even see it anymore.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "RevokeCard",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "Card GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business card",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessCard"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/card\/{cardId}\/block": {
            "put": {
                "tags": [
                    "business",
                    "card"
                ],
                "summary": "Block card",
                "description": "Marks card as blocked, meaning the owner cannot use it temporarily until it's unblocked.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "BlockCard",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "Card GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business card",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessCard"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/card\/{cardId}\/unblock": {
            "put": {
                "tags": [
                    "business",
                    "card"
                ],
                "summary": "Unblock card",
                "description": "Marks card as unblocked, meaning the owner can interact with it again.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "UnblockCard",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "Card GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business card",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessCard"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/card\/{cardId}\/achievement": {
            "post": {
                "tags": [
                    "business",
                    "card"
                ],
                "summary": "Note achievement to the card",
                "description": "Marks one of the Plan requirements as achieved in the customer card.\nCard will be marked as satisfied shortly after the last requirement is marked.\nMeaning the card owner is now legible for the bonus.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "NoteCardAchievement",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "Card GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Note card achievement request",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Achievement"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Business card",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessCard"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationError"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        },
        "\/workspace\/{workspaceId}\/card\/{cardId}\/achievement\/{achievementId}": {
            "delete": {
                "tags": [
                    "business",
                    "card"
                ],
                "summary": "Dismiss achievement from the card",
                "description": "Removes achievement and removes satisfaction mark from the card if necessary.\nCan only be done until the card owner received their bonus.\nRequires user to be authorized to work in the current workspace.",
                "operationId": "DismissCardAchievement",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "description": "Workspace GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "Card GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "achievementId",
                        "in": "path",
                        "description": "Achievement GUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business card",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessCard"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/DomainException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/NotFound"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/UnexpectedException"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BusinessWorkspace": {
                "type": "object",
                "required": [
                    "workspaceId",
                    "keeperId",
                    "name",
                    "description",
                    "address"
                ],
                "properties": {
                    "workspaceId": {
                        "description": "Workspace Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "keeperId": {
                        "description": "Keeper Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "name": {
                        "description": "Workspace (business) name",
                        "type": "string",
                        "nullable": false,
                        "example": "Schinner, DuBuque and Mann"
                    },
                    "description": {
                        "description": "Workspace (business) description",
                        "type": "string",
                        "nullable": false,
                        "example": "Explicabo ab dignissimos alias velit et eum. Eveniet consequatur nihil voluptas ipsam. Rerum aut nesciunt qui voluptatibus quae nam."
                    },
                    "address": {
                        "description": "Workspace (business) address",
                        "type": "string",
                        "nullable": false,
                        "example": "336 Ramiro Way Suite 305\nNorth Jayson, MI 92068-9579"
                    }
                }
            },
            "BusinessCard": {
                "type": "object",
                "required": [
                    "cardId",
                    "planId",
                    "customerId",
                    "isIssued",
                    "isSatisfied",
                    "isCompleted",
                    "isRevoked",
                    "isBlocked",
                    "achievements",
                    "requirements"
                ],
                "properties": {
                    "cardId": {
                        "description": "Card Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "planId": {
                        "description": "Plan Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "customerId": {
                        "description": "Customer Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "isIssued": {
                        "description": "Whether the card is issued",
                        "type": "boolean",
                        "nullable": false
                    },
                    "isSatisfied": {
                        "description": "Whether all the requirements to receive a bonus are satisfied",
                        "type": "boolean",
                        "nullable": false
                    },
                    "isCompleted": {
                        "description": "Whether the customer has received the bonus for this card",
                        "type": "boolean",
                        "nullable": false
                    },
                    "isRevoked": {
                        "description": "Whether the card has been revoked",
                        "type": "boolean",
                        "nullable": false
                    },
                    "isBlocked": {
                        "description": "Whether the card has been blocked",
                        "type": "boolean",
                        "nullable": false
                    },
                    "achievements": {
                        "description": "Achieved requirements",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "achievementId",
                                "description"
                            ],
                            "properties": {
                                "achievementId": {
                                    "description": "Achievement Id = corresponding requirement id",
                                    "format": "uuid",
                                    "type": "string",
                                    "nullable": false
                                },
                                "description": {
                                    "description": "Achievement description = corresponding requirement description",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Consectetur aperiam cum minima reprehenderit. Qui sunt esse aut dolor aut libero nemo. Excepturi ab amet distinctio commodi non dicta."
                                }
                            }
                        }
                    },
                    "requirements": {
                        "description": "All requirements",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "requirementId",
                                "description"
                            ],
                            "properties": {
                                "requirementId": {
                                    "description": "Requirement id",
                                    "format": "uuid",
                                    "type": "string",
                                    "nullable": false
                                },
                                "description": {
                                    "description": "Requirement description",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Aut laborum velit dolores in. Iusto officiis velit culpa illum. Dolor ut omnis earum vero ut."
                                }
                            }
                        }
                    }
                }
            },
            "WorkspaceProfile": {
                "description": "Workspace profile request",
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "address"
                ],
                "properties": {
                    "name": {
                        "description": "Workspace (business) title",
                        "type": "string",
                        "example": "Monahan Ltd"
                    },
                    "description": {
                        "description": "Workspace (business) description",
                        "type": "string",
                        "example": "Rerum molestias maiores deserunt ut quia. Provident dolorem quis corrupti et beatae ea. Similique ipsa modi animi illo molestias vel laboriosam est. Quia voluptas eligendi ab temporibus."
                    },
                    "address": {
                        "description": "Workspace (business) address",
                        "type": "string",
                        "example": "591 Marquardt Viaduct Suite 793\nLake Elbert, WY 89719"
                    }
                }
            },
            "PlanProfile": {
                "description": "Plan profile request",
                "type": "object",
                "required": [
                    "name",
                    "description"
                ],
                "properties": {
                    "name": {
                        "description": "Plan name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Plan description",
                        "type": "string"
                    }
                }
            },
            "RequirementProfile": {
                "description": "Requirement profile request",
                "type": "object",
                "required": [
                    "description"
                ],
                "properties": {
                    "description": {
                        "description": "Requirement description",
                        "type": "string",
                        "example": "Est sunt quam consequatur rerum. Est voluptatem itaque doloribus. Quo quos ipsa quae laborum incidunt voluptatem nihil. Sit sed velit possimus at. Repellendus ut laudantium sed."
                    }
                }
            },
            "PlanExpiration": {
                "description": "Plan expiration request",
                "type": "object",
                "required": [
                    "expires"
                ],
                "properties": {
                    "expires": {
                        "description": "Plan expiration date",
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Achievement": {
                "description": "Achievement request",
                "type": "object",
                "required": [
                    "achievementId",
                    "description"
                ],
                "properties": {
                    "achievementId": {
                        "description": "Achievement (requirement) id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "description": {
                        "description": "Achievement (requirement) description",
                        "type": "string",
                        "example": "Officiis commodi voluptas modi quis ab consequatur. Aut cumque accusamus ea. Aut temporibus assumenda pariatur delectus optio."
                    }
                }
            },
            "GetTokenRequest": {
                "description": "New API access token for the specific device request",
                "type": "object",
                "required": [
                    "identity",
                    "password",
                    "deviceName"
                ],
                "properties": {
                    "identity": {
                        "description": "Identity is either phone or email",
                        "type": "string",
                        "example": "flueilwitz@bartoletti.com"
                    },
                    "password": {
                        "description": "Password",
                        "format": "password",
                        "type": "string",
                        "example": "u)8Yd+"
                    },
                    "deviceName": {
                        "description": "Device name is required to distinguish between different access tokens",
                        "type": "string",
                        "example": "cumque"
                    }
                }
            },
            "RegisterRequest": {
                "description": "Register new user",
                "type": "object",
                "required": [
                    "phone",
                    "name",
                    "password",
                    "deviceName"
                ],
                "properties": {
                    "phone": {
                        "description": "Phone",
                        "type": "string",
                        "example": "+13468544251"
                    },
                    "email": {
                        "description": "Email is required if phone is not provided",
                        "type": "string",
                        "example": "feest.alyson@hotmail.com"
                    },
                    "name": {
                        "description": "Customer name",
                        "type": "string",
                        "example": "Rhianna Skiles MD"
                    },
                    "password": {
                        "description": "Password",
                        "format": "password",
                        "type": "string",
                        "example": "*+ev(}xK$)WLXo4T"
                    },
                    "deviceName": {
                        "description": "Device name is required to distinguish between different access tokens",
                        "type": "string",
                        "example": "est"
                    }
                }
            },
            "NewCard": {
                "description": "New card request",
                "type": "object",
                "required": [
                    "planId",
                    "customerId"
                ],
                "properties": {
                    "planId": {
                        "description": "Plan id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "customerId": {
                        "description": "Customer id",
                        "format": "uuid",
                        "type": "string"
                    }
                }
            },
            "IssuedCard": {
                "type": "object",
                "required": [
                    "cardId",
                    "planId",
                    "customerId",
                    "description",
                    "satisfied",
                    "completed",
                    "achievements",
                    "requirements"
                ],
                "properties": {
                    "cardId": {
                        "description": "Card Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "planId": {
                        "description": "Plan Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "customerId": {
                        "description": "Customer Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "description": {
                        "description": "Card (plan) description",
                        "type": "string",
                        "nullable": false,
                        "example": "Et alias tempore perspiciatis id aliquid. Eius veritatis necessitatibus cum ad animi quod impedit iusto. Quis reiciendis ut ea optio. Deleniti optio sed eos."
                    },
                    "satisfied": {
                        "description": "Whether all requirements to receive a bonus are satisfied",
                        "type": "boolean",
                        "nullable": false
                    },
                    "completed": {
                        "description": "Whether customer has received the bonus for this card",
                        "type": "boolean",
                        "nullable": false
                    },
                    "achievements": {
                        "description": "Achieved requirements",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "achievementId",
                                "description"
                            ],
                            "properties": {
                                "achievementId": {
                                    "description": "Achievement Id = corresponding requirement id",
                                    "format": "uuid",
                                    "type": "string",
                                    "nullable": false
                                },
                                "description": {
                                    "description": "Achievement description = corresponding requirement description",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Aut maiores sint iusto velit voluptas. Rerum nam nulla laborum quam qui. Non tenetur deserunt et deleniti repudiandae. Sequi et ab nisi."
                                }
                            }
                        },
                        "example": "Dicta aut sit nobis deserunt animi. Occaecati atque repudiandae fugit cum est maxime quod. Porro et placeat possimus."
                    },
                    "requirements": {
                        "description": "All requirements",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "requirementId",
                                "description"
                            ],
                            "properties": {
                                "requirementId": {
                                    "description": "Requirement id",
                                    "format": "uuid",
                                    "type": "string",
                                    "nullable": false
                                },
                                "description": {
                                    "description": "Requirement description",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Adipisci ut consectetur repellendus itaque optio perferendis minus. Porro sapiente iusto ut qui. Magni voluptates ad iure vel."
                                }
                            }
                        }
                    }
                }
            },
            "CustomerWorkspace": {
                "type": "object",
                "required": [
                    "workspaceId",
                    "name",
                    "description",
                    "address"
                ],
                "properties": {
                    "workspaceId": {
                        "description": "Workspace Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "name": {
                        "description": "Workspace (business) name",
                        "type": "string",
                        "nullable": false,
                        "example": "Halvorson and Sons"
                    },
                    "description": {
                        "description": "Workspace (business) description",
                        "type": "string",
                        "nullable": false,
                        "example": "Nesciunt temporibus aspernatur provident et. Non cumque placeat et. Ea aliquid assumenda nam qui. Consequatur explicabo quasi suscipit sit facere fugiat cum."
                    },
                    "address": {
                        "description": "Workspace (business) address",
                        "type": "string",
                        "nullable": false,
                        "example": "70395 Pearlie Plaza\nSouth Arielle, AL 33607-3616"
                    }
                }
            },
            "BusinessPlan": {
                "type": "object",
                "required": [
                    "planId",
                    "workspaceId",
                    "description",
                    "isLaunched",
                    "isStopped",
                    "isArchived",
                    "requirements"
                ],
                "properties": {
                    "planId": {
                        "description": "Plan Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "workspaceId": {
                        "description": "Workspace Id",
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    },
                    "description": {
                        "description": "Plan description",
                        "type": "string",
                        "nullable": false,
                        "example": "Totam enim et ducimus ut amet inventore. Ipsa corporis deleniti ducimus earum nostrum ipsum. Aut tempora et ex natus et voluptatum."
                    },
                    "isLaunched": {
                        "description": "Whether the plan is launched",
                        "type": "boolean",
                        "nullable": false
                    },
                    "isStopped": {
                        "description": "Whether the plan is stopped",
                        "type": "boolean",
                        "nullable": false
                    },
                    "isArchived": {
                        "description": "Whether the plan is archived",
                        "type": "boolean",
                        "nullable": false
                    },
                    "requirements": {
                        "description": "All requirements",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "requirementId",
                                "description"
                            ],
                            "properties": {
                                "requirementId": {
                                    "description": "Requirement id",
                                    "format": "uuid",
                                    "type": "string",
                                    "nullable": false
                                },
                                "description": {
                                    "description": "Requirement description",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Repellendus natus et ipsum sapiente sed ut. Sed ullam exercitationem et perferendis aut quia est. Tempore facere aut maxime facilis. Quam eaque doloribus molestiae voluptatem pariatur voluptates et."
                                }
                            }
                        }
                    }
                }
            }
        },
        "responses": {
            "ParametersAssertionException": {
                "description": "Bad Request",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "description": "Parameters Assertion Exception",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Wrong string format for UUID"
                                }
                            }
                        }
                    }
                }
            },
            "ValidationError": {
                "description": "Validation errors",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "message",
                                "errors"
                            ],
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "The given data was invalid."
                                },
                                "errors": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "nullable": false,
                                    "example": {
                                        "field": [
                                            "Something is wrong with this field!"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "AuthorizationException": {
                "description": "Forbidden",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "description": "Authorization Exception",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Subject <Subject Id> is not authorized for <Resource Type> <Resource Id>"
                                }
                            }
                        }
                    }
                }
            },
            "UserAlreadyRegisteredException": {
                "description": "Bad Request",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "description": "User Already Registered Exception",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "User with given identity already registered"
                                }
                            }
                        }
                    }
                }
            },
            "UnexpectedException": {
                "description": "Internal Server Error",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "description": "Unexpected Exception",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Unexpected exception"
                                }
                            }
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Not Found",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "description": "Requested resource not found",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Not found exception: <Resource Name>: <Resource Id>"
                                }
                            }
                        }
                    }
                }
            },
            "AuthenticationException": {
                "description": "Unauthorized",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "description": "Authentication Exception",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Invalid access token"
                                }
                            }
                        }
                    }
                }
            },
            "DomainException": {
                "description": "Bad Request",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "message"
                            ],
                            "properties": {
                                "message": {
                                    "description": "Domain Exception",
                                    "type": "string",
                                    "nullable": false,
                                    "example": "Domain logic forbids requested operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "BearerToken": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "BearerToken": []
        }
    ],
    "tags": [
        {
            "name": "customer",
            "description": "Pertains to customer operations"
        },
        {
            "name": "business",
            "description": "Pertains to all workspace operations"
        },
        {
            "name": "card",
            "description": "Pertains to workspace operations with cards"
        },
        {
            "name": "collaboration",
            "description": "Pertains to workspace operations with collaboration"
        },
        {
            "name": "plan",
            "description": "Pertains to workspace operations with plans"
        },
        {
            "name": "requirement",
            "description": "Pertains to workspace operations with requirements in a plan"
        },
        {
            "name": "workspace",
            "description": "Pertains to workspace-specific operations"
        }
    ]
}
