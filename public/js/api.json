{
    "openapi": "3.0.2",
    "info": {
        "title": "Queues"
    },
    "servers": [
        {
            "url": "http:\/\/localhost",
            "description": "App Environment"
        },
        {
            "url": "http:\/\/localhost:8000",
            "description": "Default"
        }
    ],
    "components": {
        "schemas": {
            "BusinessWorkspace": {
                "type": "object",
                "properties": {
                    "workspaceId": {
                        "description": "Workspace Id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "keeperId": {
                        "description": "Keeper Id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "name": {
                        "description": "Workspace (business) name",
                        "type": "string",
                        "example": "O'Keefe and Sons"
                    },
                    "description": {
                        "description": "Workspace (business) description",
                        "type": "string",
                        "example": "Doloribus sint reiciendis ipsam non. Maxime in dolorem explicabo quia dolore amet. Asperiores enim et sit ducimus."
                    },
                    "address": {
                        "description": "Workspace (business) address",
                        "type": "string",
                        "example": "1950 Hackett Heights Apt. 816\nPort Era, AR 23077-3619"
                    }
                }
            },
            "BusinessCard": {
                "type": "object",
                "properties": {
                    "cardId": {
                        "description": "Card Id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "planId": {
                        "description": "Plan Id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "customerId": {
                        "description": "Customer Id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "isIssued": {
                        "description": "Whether the card is issued",
                        "type": "boolean"
                    },
                    "isSatisfied": {
                        "description": "Whether all the requirements to receive a bonus are satisfied",
                        "type": "boolean"
                    },
                    "isCompleted": {
                        "description": "Whether the customer has received the bonus for this card",
                        "type": "boolean"
                    },
                    "isRevoked": {
                        "description": "Whether the card has been revoked",
                        "type": "boolean"
                    },
                    "isBlocked": {
                        "description": "Whether the card has been blocked",
                        "type": "boolean"
                    },
                    "achievements": {
                        "description": "Achieved requirements",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "achievementId": {
                                    "description": "Achievement Id = corresponding requirement id",
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "description": {
                                    "description": "Achievement description = corresponding requirement description",
                                    "type": "string",
                                    "example": "Et eos unde reprehenderit. Debitis perferendis veritatis quas commodi vitae praesentium. Consequatur vel blanditiis in est impedit maiores odio. Quia aspernatur est rerum quia et amet sint in."
                                }
                            }
                        }
                    },
                    "requirements": {
                        "description": "All requirements",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "requirementId": {
                                    "description": "Requirement id",
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "description": {
                                    "description": "Requirement description",
                                    "type": "string",
                                    "example": "Iste non sed rerum quas exercitationem ex. Voluptates veniam necessitatibus quo placeat sint asperiores. Ea sint alias dignissimos numquam aliquam tenetur pariatur."
                                }
                            }
                        }
                    }
                }
            },
            "WorkspaceProfile": {
                "description": "Workspace profile request",
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "address"
                ],
                "properties": {
                    "name": {
                        "description": "Workspace (business) title",
                        "type": "string",
                        "example": "Ullrich-Shields"
                    },
                    "description": {
                        "description": "Workspace (business) description",
                        "type": "string",
                        "example": "Nulla dolorum eos at eligendi aperiam dolore. Tempore sunt delectus unde ullam quo quia. Sed et perferendis et sed nihil. Corrupti error excepturi consequatur."
                    },
                    "address": {
                        "description": "Workspace (business) address",
                        "type": "string",
                        "example": "8632 Koelpin Pines Suite 641\nSouth Olga, HI 96899"
                    }
                }
            },
            "PlanProfile": {
                "description": "Plan profile request",
                "type": "object",
                "required": [
                    "description"
                ],
                "properties": {
                    "description": {
                        "description": "Plan description",
                        "type": "string"
                    }
                }
            },
            "RequirementProfile": {
                "description": "Requirement profile request",
                "type": "object",
                "required": [
                    "description"
                ],
                "properties": {
                    "description": {
                        "description": "Requirement description",
                        "type": "string",
                        "example": "Perspiciatis quis et quis. Eaque minus quae sint velit. Itaque qui assumenda sapiente debitis enim tenetur sed."
                    }
                }
            },
            "PlanExpiration": {
                "description": "Plan expiration request",
                "type": "object",
                "required": [
                    "expires"
                ],
                "properties": {
                    "expires": {
                        "description": "Plan expiration date",
                        "format": "date-time",
                        "type": "string"
                    }
                }
            },
            "Achievement": {
                "description": "Achievement request",
                "type": "object",
                "required": [
                    "achievementId",
                    "description"
                ],
                "properties": {
                    "achievementId": {
                        "description": "Achievement (requirement) id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "description": {
                        "description": "Achievement (requirement) description",
                        "type": "string",
                        "example": "Omnis non mollitia dolore. Dolorum dolorem odit at molestiae hic et. Sit eos hic totam dolore porro quo aliquam."
                    }
                }
            },
            "GetTokenRequest": {
                "description": "New API access token for the specific device request",
                "type": "object",
                "required": [
                    "identity",
                    "password",
                    "deviceName"
                ],
                "properties": {
                    "identity": {
                        "description": "Identity is either phone or email",
                        "type": "string",
                        "example": "jgibson@bashirian.info"
                    },
                    "password": {
                        "description": "Password",
                        "format": "password",
                        "type": "string",
                        "example": "`\\B05=#{"
                    },
                    "deviceName": {
                        "description": "Device name is required to distinguish between different access tokens",
                        "type": "string",
                        "example": "consequatur"
                    }
                }
            },
            "RegisterRequest": {
                "anyOf": [
                    {
                        "description": "Phone required",
                        "type": "object",
                        "required": [
                            "phone",
                            "name",
                            "password",
                            "deviceName"
                        ],
                        "properties": {
                            "phone": {
                                "description": "Phone",
                                "type": "string",
                                "example": "228-477-5366"
                            },
                            "email": {
                                "description": "Email is required if phone is not provided",
                                "type": "string",
                                "example": "domenico.ondricka@lind.com"
                            },
                            "name": {
                                "description": "Customer name",
                                "type": "string",
                                "example": "Kellie Gutkowski"
                            },
                            "password": {
                                "description": "Password",
                                "format": "password",
                                "type": "string",
                                "example": "+b~%H?v?8w%LPm|u"
                            },
                            "deviceName": {
                                "description": "Device name is required to distinguish between different access tokens",
                                "type": "string",
                                "example": "consequatur"
                            }
                        }
                    },
                    {
                        "description": "Email required",
                        "type": "object",
                        "required": [
                            "email",
                            "name",
                            "password",
                            "deviceName"
                        ],
                        "properties": {
                            "phone": {
                                "description": "Phone",
                                "type": "string",
                                "example": "228-477-5366"
                            },
                            "email": {
                                "description": "Email is required if phone is not provided",
                                "type": "string",
                                "example": "domenico.ondricka@lind.com"
                            },
                            "name": {
                                "description": "Customer name",
                                "type": "string",
                                "example": "Kellie Gutkowski"
                            },
                            "password": {
                                "description": "Password",
                                "format": "password",
                                "type": "string",
                                "example": "+b~%H?v?8w%LPm|u"
                            },
                            "deviceName": {
                                "description": "Device name is required to distinguish between different access tokens",
                                "type": "string",
                                "example": "consequatur"
                            }
                        }
                    }
                ]
            },
            "NewCard": {
                "description": "New card request",
                "type": "object",
                "required": [
                    "planId",
                    "customerId"
                ],
                "properties": {
                    "planId": {
                        "description": "Plan id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "customerId": {
                        "description": "Customer id",
                        "format": "uuid",
                        "type": "string"
                    }
                }
            },
            "": {
                "type": "object",
                "properties": {
                    "cardId": {
                        "description": "Card Id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "planId": {
                        "description": "Plan Id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "customerId": {
                        "description": "Customer Id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "description": {
                        "description": "Card (plan) description",
                        "type": "string",
                        "example": "Ab ipsum nulla debitis dicta. Id illo sit est voluptatem sed cum est consequuntur. Eaque labore dolores error adipisci."
                    },
                    "satisfied": {
                        "description": "Whether all requirements to receive a bonus are satisfied",
                        "type": "boolean"
                    },
                    "completed": {
                        "description": "Whether customer has received the bonus for this card",
                        "type": "boolean"
                    },
                    "achievements": {
                        "description": "Achieved requirements",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "achievementId": {
                                    "description": "Achievement Id = corresponding requirement id",
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "description": {
                                    "description": "Achievement description = corresponding requirement description",
                                    "type": "string",
                                    "example": "Praesentium praesentium culpa consequuntur temporibus delectus velit. Beatae deserunt iste eveniet modi tempore pariatur."
                                }
                            }
                        },
                        "example": "Consectetur est aut commodi cupiditate illum. Reiciendis quo aut vel placeat possimus blanditiis tempora. Itaque dolor rem in velit tempora reprehenderit aliquid."
                    },
                    "requirements": {
                        "description": "All requirements",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "requirementId": {
                                    "description": "Requirement id",
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "description": {
                                    "description": "Requirement description",
                                    "type": "string",
                                    "example": "Vel sed voluptates et ipsam vel esse quae. Quia est optio sint aut. Reiciendis cum eius sit nisi eos. A exercitationem nam et aliquid dolore. Qui et ullam doloremque ipsa quibusdam."
                                }
                            }
                        }
                    }
                }
            },
            "CustomerWorkspace": {
                "type": "object",
                "properties": {
                    "workspaceId": {
                        "description": "Workspace Id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "name": {
                        "description": "Workspace (business) name",
                        "type": "string",
                        "example": "Streich-Grant"
                    },
                    "description": {
                        "description": "Workspace (business) description",
                        "type": "string",
                        "example": "Quod qui consequatur totam repudiandae eos deleniti consequatur. Ut officia veritatis sint ut quam qui dolores. Similique consequatur temporibus aut rerum dolorem."
                    },
                    "address": {
                        "description": "Workspace (business) address",
                        "type": "string",
                        "example": "2121 Fay Summit Apt. 382\nHowellburgh, SD 40108-1033"
                    }
                }
            },
            "BusinessPlan": {
                "type": "object",
                "properties": {
                    "planId": {
                        "description": "Plan Id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "workspaceId": {
                        "description": "Workspace Id",
                        "format": "uuid",
                        "type": "string"
                    },
                    "description": {
                        "description": "Plan description",
                        "type": "string",
                        "example": "Cumque laudantium voluptate provident maxime delectus mollitia magnam. Doloribus est aut quas laudantium. Distinctio vitae nulla dolorem eius officiis incidunt ut et. Quasi sint ea iusto."
                    },
                    "isLaunched": {
                        "description": "Whether the plan is launched",
                        "type": "boolean"
                    },
                    "isStopped": {
                        "description": "Whether the plan is stopped",
                        "type": "boolean"
                    },
                    "isArchived": {
                        "description": "Whether the plan is archived",
                        "type": "boolean"
                    },
                    "requirements": {
                        "description": "All requirements",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "requirementId": {
                                    "description": "Requirement id",
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "description": {
                                    "description": "Requirement description",
                                    "type": "string",
                                    "example": "Incidunt voluptatem itaque aut sed modi eum at. Ut magnam doloremque sint qui voluptatem."
                                }
                            }
                        }
                    }
                }
            }
        },
        "responses": {
            "ParametersAssertionException": {
                "description": "Bad Request",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "description": "Parameters Assertion Exception",
                                    "type": "string",
                                    "example": "Wrong string format for UUID"
                                }
                            }
                        }
                    }
                }
            },
            "ValidationError": {
                "description": "Validation errors",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "The given data was invalid."
                                },
                                "errors": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "field": [
                                            "Something is wrong with this field!"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "AuthorizationException": {
                "description": "Forbidden",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "description": "Authorization Exception",
                                    "type": "string",
                                    "example": "Subject <Subject Id> is not authorized for <Resource Type> <Resource Id>"
                                }
                            }
                        }
                    }
                }
            },
            "UserAlreadyRegisteredException": {
                "description": "Bad Request",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "description": "User Already Registered Exception",
                                    "type": "string",
                                    "example": "User with given identity already registered"
                                }
                            }
                        }
                    }
                }
            },
            "UnexpectedException": {
                "description": "Internal Server Error",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "description": "Unexpected Exception",
                                    "type": "string",
                                    "example": "Unexpected exception"
                                }
                            }
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Not Found",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "description": "Requested resource not found",
                                    "type": "string",
                                    "example": "Not found exception: <Resource Name>: <Resource Id>"
                                }
                            }
                        }
                    }
                }
            },
            "AuthenticationException": {
                "description": "Unauthorized",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "description": "Authentication Exception",
                                    "type": "string",
                                    "example": "Invalid access token"
                                }
                            }
                        }
                    }
                }
            },
            "DomainException": {
                "description": "Bad Request",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "description": "Domain Exception",
                                    "type": "string",
                                    "example": "Domain logic forbids requested operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "BearerToken": {
                "type": "apiKey",
                "in": "header",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "BearerToken": []
        }
    ],
    "tags": [
        {
            "name": "customer",
            "description": "Pertains to customer operations"
        },
        {
            "name": "business",
            "description": "Pertains to all workspace operations"
        },
        {
            "name": "card",
            "description": "Pertains to workspace operations with cards"
        },
        {
            "name": "collaboration",
            "description": "Pertains to workspace operations with collaboration"
        },
        {
            "name": "plan",
            "description": "Pertains to workspace operations with plans"
        },
        {
            "name": "requirement",
            "description": "Pertains to workspace operations with requirements in a plan"
        },
        {
            "name": "workspace",
            "description": "Pertains to workspace-specific operations"
        }
    ]
}
